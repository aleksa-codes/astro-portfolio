---
import Layout from '@/layouts/layout.astro';
import Breadcrumb from '@/components/breadcrumb.astro';
import { tagToSlug, calculateReadingTime } from '@/lib/utils';
import type { CollectionEntry } from 'astro:content';
import { Icon } from 'astro-icon/components';
import { Image } from 'astro:assets';
import Button from '@/components/ui/button.astro';
import Badge from '@/components/ui/badge.astro';

interface Props {
  title: string;
  description: string;
  noindex?: boolean;
  nofollow?: boolean;
  page: {
    data: CollectionEntry<'blog'>[];
    currentPage: number;
    lastPage: number;
    url: {
      prev?: string;
      next?: string;
    };
  };
  allTags: string[];
}

const { title, description, noindex, nofollow, page, allTags } = Astro.props;

// Calculate reading time for each post
const postsWithReadTime = page.data.map((post) => ({
  ...post,
  readingTime: calculateReadingTime(post.body!),
}));
---

<Layout title={title} description={description} noindex={noindex} nofollow={nofollow}>
  <section class='container space-y-6'>
    <Breadcrumb />
    <h1 class='text-4xl font-extrabold tracking-tight lg:text-5xl'>{title}</h1>
    <p class='text-base-content max-w-[750px] text-lg leading-relaxed'>{description}</p>

    <div class='grid grid-cols-1 gap-8 lg:grid-cols-12'>
      <!-- Main Content -->
      <div class='lg:col-span-8'>
        <div class='grid grid-cols-1 gap-8'>
          {
            postsWithReadTime.map((post) => (
              <div class='group border-base-300 bg-base-200 overflow-hidden rounded-lg border shadow-xs transition-all hover:shadow-md'>
                {post.data.thumbnail && (
                  <div class='aspect-video overflow-hidden'>
                    <Image
                      src={post.data.thumbnail}
                      alt={post.data.title}
                      format={'webp'}
                      quality={'max'}
                      class='size-full object-cover transition-transform duration-300 group-hover:scale-105'
                    />
                  </div>
                )}
                <div class='space-y-4 p-6'>
                  <h2 class='text-2xl font-bold'>
                    <a href={`/blog/${post.id}/`} class='text-base-content hover:text-primary transition-colors'>
                      {post.data.title}
                    </a>
                  </h2>
                  <div class='text-base-content/80 flex items-center gap-2 text-sm'>
                    <span class='flex items-center gap-1'>
                      <Icon name='lucide:clock' class='size-4' />
                      {post.readingTime} min read
                    </span>
                    <div>â€¢</div>
                    <span class='flex items-center gap-1'>
                      <Icon name='lucide:calendar' class='size-4' />
                      <time datetime={post.data.date.toISOString()}>
                        {post.data.date.toLocaleDateString('en-us', {
                          year: 'numeric',
                          month: 'long',
                          day: 'numeric',
                        })}
                      </time>
                    </span>
                  </div>
                  <p class='text-base-content/80 line-clamp-3'>{post.data.description}</p>
                  {post.data.tags?.length > 0 && (
                    <div class='flex flex-wrap gap-2'>
                      {post.data.tags.map((tag) => (
                        <Badge variant={'outline'} as='a' href={`/blog/${tagToSlug(tag)}/`}>
                          {tag}
                        </Badge>
                      ))}
                    </div>
                  )}
                </div>
              </div>
            ))
          }
        </div>

        <!-- Pagination -->
        {
          page.lastPage > 1 && (
            <div class='mt-12 flex justify-center gap-2'>
              <Button variant='ghost' href={page.url.prev || '#'} disabled={!page.url.prev} aria-label='Previous Page'>
                <Icon name='lucide:chevron-left' class='size-4' />
              </Button>
              <div class='border-base-300 bg-base-200 text-base-content inline-flex h-10 items-center justify-center rounded-md border px-4'>
                Page {page.currentPage} of {page.lastPage}
              </div>
              <Button variant='ghost' href={page.url.next || '#'} disabled={!page.url.next} aria-label='Next Page'>
                <Icon name='lucide:chevron-right' class='size-4' />
              </Button>
            </div>
          )
        }
      </div>

      <!-- Sidebar -->
      <div class='lg:col-span-4'>
        <div class='space-y-8 lg:sticky lg:top-24'>
          <div class='border-base-300 bg-base-200 rounded-lg border p-6'>
            <h2 class='text-base-content mb-4 text-xl font-bold'>Categories</h2>
            <div class='flex flex-wrap gap-2'>
              {
                allTags.map((tag) => (
                  <Badge variant={'outline'} as='a' href={`/blog/${tagToSlug(tag)}/`}>
                    {tag}
                  </Badge>
                ))
              }
            </div>
          </div>

          <div class='border-base-300 bg-base-200 rounded-lg border p-6'>
            <h2 class='text-base-content mb-4 text-xl font-bold'>RSS Feed</h2>
            <p class='text-base-content/80 mb-4'>Subscribe to my blog and stay up to date with the latest posts.</p>
            <Button variant='warning' href='/rss.xml'>
              <Icon name='lucide:rss' class='size-4' />
              Subscribe
            </Button>
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>
